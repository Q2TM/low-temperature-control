/* tslint:disable */
/* eslint-disable */
/**
 * Lakeshore Management API
 * API for Lakeshore Model240 temperature controller
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for device identification information.
 * 
 * Used by GET /identification endpoint to return device details.
 * @export
 * @interface IdentificationResp
 */
export interface IdentificationResp {
    /**
     * 
     * @type {string}
     * @memberof IdentificationResp
     */
    manufacturer: string;
    /**
     * 
     * @type {string}
     * @memberof IdentificationResp
     */
    model: string;
    /**
     * 
     * @type {string}
     * @memberof IdentificationResp
     */
    serialNumber: string;
    /**
     * 
     * @type {string}
     * @memberof IdentificationResp
     */
    firmwareVersion: string;
}

/**
 * Check if a given object implements the IdentificationResp interface.
 */
export function instanceOfIdentificationResp(value: object): value is IdentificationResp {
    if (!('manufacturer' in value) || value['manufacturer'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('serialNumber' in value) || value['serialNumber'] === undefined) return false;
    if (!('firmwareVersion' in value) || value['firmwareVersion'] === undefined) return false;
    return true;
}

export function IdentificationRespFromJSON(json: any): IdentificationResp {
    return IdentificationRespFromJSONTyped(json, false);
}

export function IdentificationRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentificationResp {
    if (json == null) {
        return json;
    }
    return {
        
        'manufacturer': json['manufacturer'],
        'model': json['model'],
        'serialNumber': json['serialNumber'],
        'firmwareVersion': json['firmwareVersion'],
    };
}

export function IdentificationRespToJSON(json: any): IdentificationResp {
    return IdentificationRespToJSONTyped(json, false);
}

export function IdentificationRespToJSONTyped(value?: IdentificationResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'manufacturer': value['manufacturer'],
        'model': value['model'],
        'serialNumber': value['serialNumber'],
        'firmwareVersion': value['firmwareVersion'],
    };
}

