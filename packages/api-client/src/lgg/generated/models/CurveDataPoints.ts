/* tslint:disable */
/* eslint-disable */
/**
 * Lakeshore Management API
 * API for Lakeshore Model240 temperature controller
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Schema for multiple curve data points containing arrays of temperature and sensor values.
 * 
 * Used by GET /curve/{channel}/data-points endpoint to return all curve data.
 * @export
 * @interface CurveDataPoints
 */
export interface CurveDataPoints {
    /**
     * 
     * @type {number}
     * @memberof CurveDataPoints
     */
    channel: number;
    /**
     * List of temperature values
     * @type {Array<number>}
     * @memberof CurveDataPoints
     */
    temperatures: Array<number>;
    /**
     * List of sensor values
     * @type {Array<number>}
     * @memberof CurveDataPoints
     */
    sensors: Array<number>;
}

/**
 * Check if a given object implements the CurveDataPoints interface.
 */
export function instanceOfCurveDataPoints(value: object): value is CurveDataPoints {
    if (!('channel' in value) || value['channel'] === undefined) return false;
    if (!('temperatures' in value) || value['temperatures'] === undefined) return false;
    if (!('sensors' in value) || value['sensors'] === undefined) return false;
    return true;
}

export function CurveDataPointsFromJSON(json: any): CurveDataPoints {
    return CurveDataPointsFromJSONTyped(json, false);
}

export function CurveDataPointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurveDataPoints {
    if (json == null) {
        return json;
    }
    return {
        
        'channel': json['channel'],
        'temperatures': json['temperatures'],
        'sensors': json['sensors'],
    };
}

export function CurveDataPointsToJSON(json: any): CurveDataPoints {
    return CurveDataPointsToJSONTyped(json, false);
}

export function CurveDataPointsToJSONTyped(value?: CurveDataPoints | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'channel': value['channel'],
        'temperatures': value['temperatures'],
        'sensors': value['sensors'],
    };
}

